#!/bin/bash
# Copyright (c) 2018 David 'Mokon' Bond <mokon@mokon.net>
# Author: David 'Mokon' Bond <mokon@mokon.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

function deploy_hook {
    local hook=$1

    if [ -L .git/hooks/$hook ] ; then
        link=$(readlink .git/hooks/$hook)
        if [ "$link" != "../../tools/hooks/$hook" ] ; then
            echo "unknown $hook symlink exists [$link]"
            exit -1
        fi
    elif [ -e .git/hooks/$hook ] ; then
        echo "unknown $hook script exists"
        exit -1
    else
        ln -s ../../tools/hooks/$hook .git/hooks/$hook
    fi
}

function clone_github_project {
    org=$1
    project=$2

    echo "Building and installing $project development libraries."
    pushd . > /dev/null
    mkdir build && cd build
    git clone -q https://github.com/$org/$project
    cd $project
}

function build_and_install_cmake_github_project {
    org=$1
    project=$2
    cross=$3

    clone_github_project $org $project
    mkdir _build && cd _build
    ${cross}cmake .. > ../../$project.cmake.log
    make -j $(nproc) > ../../$project.make.log
    sudo make install > ../../$project.make.install.log

    popd > /dev/null
    /bin/rm -rf build/$project
}

function build_and_install_make_github_project {
    org=$1
    project=$2
    cross=$3

    clone_github_project $org $project
    ${cross}make -j $(nproc) > ../../$project.make.log
    sudo make install > ../../$project.make.install.log

    popd > /dev/null
    /bin/rm -rf build/$project
}

sudo ./tools/install_make_prereq
build_and_install_cmake_github_project facebook folly
deploy_hook pre-commit
deploy_hook commit-msg

# TODO folly does not support mingw64
# build_and_install_cmake_github_project facebook folly mingw64-
# TODO determine how to build tbb with mingw64
# build_and_install_make_github_project 01org tbb mingw64-
